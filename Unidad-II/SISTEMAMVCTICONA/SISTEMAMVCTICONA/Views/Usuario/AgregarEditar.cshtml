@model SISTEMAMVCTICONA.Models.Usuario
@{
    ViewBag.Title = "AgregarEditar";
    List<SISTEMAMVCTICONA.Models.TipoUsuario> tipousuario = ViewBag.Tipo;
}

<h2>Agregar / Editar</h2>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="~/Usuario/Index">Usuario</a></li>
        <li class="breadcrumb-item active">
            @(Model.idusuario > 0 ? Model.nombre
                                 : "Nuevo Registro")
        </li>
    </ol>
</nav>

@using (Html.BeginForm("Guardar", "Usuario", FormMethod.Post, new { @id = "frm-persona" }))
{
    @Html.HiddenFor(x => x.idusuario)
    <div class="panel panel-default">
        <div class="panel-heading">Informacion de la Persona</div>
        <div class="panel-body">
            <div class="form-group">
                @Html.Label("Id:")
                @Html.TextBoxFor(x => x.idusuario, new { @class = "form-control", disabled = true })
            </div>
            <div class="form-group">
                @Html.Label("Tipo Usuario:")
                <select name="idtipousuario" class="form-control">
                    <option @(Model.idtipousuario.Equals("") ? "Selected" : "") value="">-Seleccione-</option>
                    @foreach (var p in tipousuario)
                    {
                        <option @(Model.idtipousuario.Equals(p.idtipousuario) ? "Selected" : "") value="@p.idtipousuario">@p.nombre</option>
                        @Html.ValidationMessageFor(x => x.idtipousuario, null, new { @class = "label label-danger" })
                    }
                </select>
            </div>
            <div class="form-group">
                @Html.Label("Usuario:")
                @Html.TextBoxFor(x => x.usuario, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.usuario, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Clave:")
                @Html.TextBoxFor(x => x.clave, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.clave, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Nombre :")
                @Html.TextBoxFor(x => x.nombre, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.nombre, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Apellido:")
                @Html.TextBoxFor(x => x.apellido, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.apellido, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("E-mail:")
                @Html.TextBoxFor(x => x.email, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.email, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
            @Html.Label("Estado:")
            <br />
            @Html.RadioButtonFor(x => x.estado, "A")<span> Activo</span>
            @Html.RadioButtonFor(x => x.estado, "I")<span> Inactivo</span>
            @Html.ValidationMessageFor(x => x.estado, null, new { @class = "label label-danger" })
        </div>
            @*<div class="form-group">
                @Html.Label("Estado:")
                <br />
                @Html.RadioButtonFor(x => x.estado, "A")<span> Activo</span>
                @Html.RadioButtonFor(x => x.estado, "I")<span> Inactivo</span>
                @Html.ValidationMessageFor(x => x.estado, null, new { @class = "label label-danger" })
            </div>*@
        </div>
    </div>
    <div class="text-right">
        <button type="submit" class="btn btn-primary">GRABAR</button>
        <a href="~/Usuario" class="btn btn-danger">CANCELAR</a>
    </div>
}